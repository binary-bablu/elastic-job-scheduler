server:
  port: 8082

spring:
  application:
    name: job-scheduler-service
  profiles:
    active: scheduler
    
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1
    username: postgres
    password: 
    driver-class-name: org.h2.Driver
    hikari:
      maximum-pool-size: 20
      connection-timeout: 30000
      
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

  h2:
   console:
     enabled: true

  # RabbitMQ Configuration
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:15672}
    username: ${RABBITMQ_USER:admin}
    password: ${RABBITMQ_PASS:admin}
    publisher-confirm-type: correlated
    publisher-returns: true
    
  quartz:
    job-store-type: jdbc
    jdbc:
      initialize-schema: always
    properties:
      org:
        quartz:
          scheduler:
            instanceName: DistributedJobScheduler
            instanceId: AUTO
          jobStore:
            class: org.springframework.scheduling.quartz.LocalDataSourceJobStore
            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
            tablePrefix: QRTZ_
            isClustered: true
            clusterCheckinInterval: 10000
          threadPool:
            threadCount: 50  # Reduced since we're just triggering, not executing
            
logging:
  level:
     com.scheduler: DEBUG
     org.springframework.amqp: INFO
